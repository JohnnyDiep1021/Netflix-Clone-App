{"version":3,"file":"static/js/852.82b754c4.chunk.js","mappings":"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","sources":["HomePage/components/MovieDetail/MovieDetail.js","HomePage/components/MovieItem/MovieItem.js","SearchPage/page/SearchView.js","shared/components/UI/Modal/MessageModal.js","shared/hooks/movie-hooks.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport { useMovieBtn } from \"../../../shared/hooks/movie-hooks\";\r\n\r\nimport Button from \"../../../shared/components/UI/Button/Button\";\r\nimport { MessageCornerModal } from \"../../../shared/components/UI/Modal/MessageModal\";\r\nimport Modal from \"../../../shared/components/UI/Modal/Modal\";\r\n\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\r\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\r\nimport VolumeUpIcon from \"@mui/icons-material/VolumeUp\";\r\nimport VolumeOffIcon from \"@mui/icons-material/VolumeOff\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { ANIMATION_STYLE, ANIMATION_TIMEOUT } from \"../../../shared/util/util\";\r\n\r\nimport \"./MovieDetail.scss\";\r\n\r\nconst MovieDetail = (props) => {\r\n  const [isMuted, setIsMuted] = useState(false);\r\n  const { watchListToggleHandler, addMovieState, message, clearMessage } =\r\n    useMovieBtn(props.id);\r\n  const muteHandler = () => {\r\n    if (!isMuted) return setIsMuted(true);\r\n    setIsMuted(false);\r\n  };\r\n  return (\r\n    <Modal\r\n      className=\"modal-movie-detail\"\r\n      show={props.show}\r\n      onClose={props.onClose}\r\n      aniClassNames={ANIMATION_STYLE.movie}\r\n      aniTiming={ANIMATION_TIMEOUT.movieAniTiming}\r\n    >\r\n      <div className=\"top\">\r\n        <div className=\"poster-video-container\">\r\n          <div className=\"bg-filter\"></div>\r\n          <video\r\n            src={props.movie.trailer.file}\r\n            autoPlay={props.show}\r\n            loop\r\n            muted={isMuted}\r\n            className=\"poster-video\"\r\n          />\r\n        </div>\r\n        <div className=\"intrt-btn-container\">\r\n          <div className=\"left\">\r\n            <Button\r\n              className=\"btn-func-icon striking\"\r\n              element=\"link\"\r\n              to={{ pathname: \"/watch\", movie: props.movie }}\r\n            >\r\n              <PlayArrowIcon />\r\n              <span>Play</span>\r\n            </Button>\r\n            <Button\r\n              className={`btn-icon ${addMovieState && \"added\"}`}\r\n              onClick={async () => {\r\n                await watchListToggleHandler(props.id);\r\n              }}\r\n              toolTip={{\r\n                title: \"Add to My List\",\r\n                placement: \"top\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              <FavoriteIcon />\r\n            </Button>\r\n            <Button\r\n              className=\"btn-icon\"\r\n              toolTip={{\r\n                title: \"I like this\",\r\n                placement: \"top\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              <ThumbUpOffAltIcon />\r\n            </Button>\r\n            <Button\r\n              className=\"btn-icon\"\r\n              toolTip={{\r\n                title: \"Not for me\",\r\n                placement: \"top\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              <ThumbDownOffAltIcon />\r\n            </Button>\r\n          </div>\r\n          <div className=\"right\">\r\n            <Button\r\n              className=\"btn-icon\"\r\n              onClick={muteHandler}\r\n              toolTip={{\r\n                title: !isMuted ? \"Muted\" : \"Unmuted\",\r\n                placement: \"top\",\r\n                fontSize: \"16px\",\r\n              }}\r\n            >\r\n              {!isMuted ? <VolumeUpIcon /> : <VolumeOffIcon />}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Button className=\"btn-icon btn-close\" onClick={props.onClose}>\r\n          <CloseIcon />\r\n        </Button>\r\n      </div>\r\n      <div className=\"bottom\">\r\n        <div className=\"description-container\">\r\n          <div className=\"detail-description\">\r\n            <div className=\"publish-info\">\r\n              <span className=\"matching\">\r\n                {props.movie.matching || \"93%\"} Match\r\n              </span>\r\n              <span className=\"year\">{props.movie.year}</span>\r\n              <span className=\"type\">\r\n                {props.movie.isSeries ? \"Series\" : \"Movie\"}\r\n              </span>\r\n              <span className=\"duration\">{props.movie.duration} mins</span>\r\n            </div>\r\n            <div className=\"category category-responsive\">\r\n              <div className=\"cast\">\r\n                <p>\r\n                  <span>Cast:</span>\r\n                  {props.movie.casting || \"Anh Tu, Diem My\"}\r\n                </p>\r\n              </div>\r\n              <div className=\"genre\">\r\n                <p>\r\n                  <span>Genre:</span>\r\n                  {props.movie.genre}\r\n                </p>\r\n              </div>\r\n              <div className=\"adj\">\r\n                <p>\r\n                  <span>\r\n                    This {props.movie.isSeries ? \"Series\" : \"Movie\"} is:\r\n                  </span>\r\n                  {props.movie.label || \"Romantic, Heartbroken\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"description-info\">\r\n              <p className=\"warning\">\r\n                {props.movie.warning ||\r\n                  `Some audio languages may be pending: we're prioritizing the\r\n                safety of voice actors`}\r\n              </p>\r\n              <p>{props.movie.desc}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"category\">\r\n            <div className=\"cast\">\r\n              <p>\r\n                <span>Cast:</span>\r\n                {props.movie.casting || \"Anh Tu, Diem My\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"genre\">\r\n              <p>\r\n                <span>Genre:</span>\r\n                {props.movie.genre}\r\n              </p>\r\n            </div>\r\n            <div className=\"adj\">\r\n              <p>\r\n                <span>\r\n                  This {props.movie.isSeries ? \"Series\" : \"Movie\"} is:\r\n                </span>\r\n                {props.movie.label || \"Romantic, Heartbroken\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"episodes-container\"></div>\r\n      </div>\r\n      <MessageCornerModal\r\n        show={message.isShow}\r\n        message={message.msg}\r\n        onClose={clearMessage}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useMovieBtn } from \"../../../shared/hooks/movie-hooks\";\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MovieDetail from \"../MovieDetail/MovieDetail\";\r\nimport Button from \"../../../shared/components/UI/Button/Button\";\r\nimport LoadingSpinner from \"../../../shared/components/UI/Loading/LoadingSpinner\";\r\nimport { MessageCornerModal } from \"../../../shared/components/UI/Modal/MessageModal\";\r\n\r\nimport ReactTooltip from \"react-tooltip\";\r\n\r\nimport FiberManualRecordIcon from \"@mui/icons-material/FiberManualRecord\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ThumbUpOffAltIcon from \"@mui/icons-material/ThumbUpOffAlt\";\r\nimport ThumbDownOffAltIcon from \"@mui/icons-material/ThumbDownOffAlt\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport \"./MovieItem.scss\";\r\n\r\nconst MovieItem = (props) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  // console.log(watchList, isAdded);\r\n  const { watchListToggleHandler, addMovieState, message } = useMovieBtn(\r\n    props.id\r\n  );\r\n  const [isHovered, setIsHovered] = useState(false);\r\n  const { isLoading, sendRequest } = useHttpClient(props.loading || false);\r\n  const [movieItem, setMovieItem] = useState(props.movie);\r\n  const [showDetail, setShowDetail] = useState(false);\r\n  useEffect(() => {\r\n    if (!props.movie) {\r\n      const fetchMovieItem = async () => {\r\n        try {\r\n          const responseData = await sendRequest(\r\n            `${process.env.REACT_APP_BACKEND_URL}/movies/${props.id}`,\r\n            \"GET\",\r\n            null,\r\n            { Authorization: `Bearer ${token}` }\r\n          );\r\n          setMovieItem(responseData.movie);\r\n        } catch (error) {}\r\n      };\r\n      fetchMovieItem();\r\n    } else {\r\n      return;\r\n    }\r\n  }, [sendRequest, token, props.id, props.movie]);\r\n\r\n  const showOnHoverHandler = () => {\r\n    setIsHovered(true);\r\n  };\r\n  const hideOnLeaveHandler = () => {\r\n    setIsHovered(false);\r\n  };\r\n  const showDetailHandler = () => {\r\n    setShowDetail(true);\r\n  };\r\n  const hideDetailHandler = () => {\r\n    setShowDetail(false);\r\n  };\r\n  // const triggerHandler = async (domEle) => {\r\n  //   try {\r\n  //     // console.log(domEle);\r\n  //     console.log(`video is playing`);\r\n  //     if (domEle.requestFullscreen) await domEle.requestFullscreen();\r\n  //     else if (domEle.webkitRequestFullscreen)\r\n  //       await domEle.webkitRequestFullscreen();\r\n  //     else if (domEle.msRequestFullScreen) await domEle.msRequestFullScreen();\r\n  //   } catch (error) {}\r\n  // };\r\n  return (\r\n    <li\r\n      key={props.id}\r\n      className={`movie-item ${props.className}`}\r\n      onMouseLeave={hideOnLeaveHandler}\r\n      // onMouseOver={hidePosterHandler}\r\n    >\r\n      {isLoading && <LoadingSpinner asOverlay inherit />}\r\n      {movieItem && (\r\n        <Fragment>\r\n          {!isHovered && (\r\n            <Link\r\n              to={{\r\n                pathname: \"/watch\",\r\n                movie: movieItem,\r\n                // trigger: triggerHandler,\r\n              }}\r\n            >\r\n              <img\r\n                src={movieItem.image.file}\r\n                // className={`poster ${isPosterHovered && \"hide\"}`}\r\n                className={`poster`}\r\n                alt=\"movie poster\"\r\n                // onClick={showOnHoverHandler}\r\n              />\r\n            </Link>\r\n          )}\r\n          {isHovered && !showDetail && (\r\n            <video\r\n              className={`trailer-video ${!isHovered && \"deactive\"}`}\r\n              src={movieItem.trailer.file}\r\n              autoPlay={isHovered}\r\n              muted\r\n              loop\r\n            />\r\n          )}\r\n\r\n          <div\r\n            className={`description ${props.className}`}\r\n            onMouseOver={showOnHoverHandler}\r\n          >\r\n            <div className=\"description__btn\">\r\n              <div className=\"left\">\r\n                <Button\r\n                  className=\"btn-icon play-active\"\r\n                  element=\"link\"\r\n                  to={{\r\n                    pathname: \"/watch\",\r\n                    movie: movieItem,\r\n                    // trigger: triggerHandler,\r\n                  }}\r\n                  toolTip={{\r\n                    title: \"Play this!\",\r\n                    placement: \"top\",\r\n                  }}\r\n                  // onClick={() => {\r\n                  //   triggerHandler();\r\n                  // }}\r\n                >\r\n                  <PlayArrowIcon />\r\n                </Button>\r\n                <Button\r\n                  className={`btn-icon ${addMovieState && \"added\"}`}\r\n                  onClick={async () => {\r\n                    await watchListToggleHandler(movieItem._id);\r\n                  }}\r\n                  toolTip={{\r\n                    title: \"Add to My List\",\r\n                    placement: \"top\",\r\n                  }}\r\n                >\r\n                  <FavoriteIcon />\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-icon\"\r\n                  toolTip={{\r\n                    title: \"I like this\",\r\n                    placement: \"top\",\r\n                  }}\r\n                >\r\n                  <ThumbUpOffAltIcon />\r\n                </Button>\r\n                <Button\r\n                  className=\"btn-icon\"\r\n                  toolTip={{\r\n                    title: \"Not for me\",\r\n                    placement: \"top\",\r\n                  }}\r\n                >\r\n                  <ThumbDownOffAltIcon />\r\n                </Button>\r\n              </div>\r\n              <div className=\"right\">\r\n                <Button\r\n                  className=\"btn-icon\"\r\n                  onClick={showDetailHandler}\r\n                  toolTip={{\r\n                    title: \"Episodes & Info\",\r\n                    placement: \"top\",\r\n                  }}\r\n                >\r\n                  <ExpandMoreIcon />\r\n                </Button>\r\n              </div>\r\n            </div>\r\n            <div className=\"description__text\">\r\n              <div className=\"description__top\">\r\n                <span className=\"description__match\">97% Match</span>\r\n                <span className=\"description__limit\">{movieItem.limit}</span>\r\n                <span className=\"description__duration\">\r\n                  {movieItem.duration} mins\r\n                </span>\r\n              </div>\r\n              <div className=\"description__bottom\">\r\n                <ul className=\"description__list\">\r\n                  {movieItem.genre.split(\",\").map((genre) => (\r\n                    <li className=\"description__item\" key={Math.random()}>\r\n                      <FiberManualRecordIcon />\r\n                      <span className=\"description__genre\">{genre.trim()}</span>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Fragment>\r\n      )}\r\n      {movieItem && (\r\n        <MovieDetail\r\n          show={showDetail}\r\n          onClose={hideDetailHandler}\r\n          id={props.id}\r\n          movie={movieItem}\r\n        />\r\n      )}\r\n      <MessageCornerModal show={message.isShow} message={message.msg} />\r\n    </li>\r\n  );\r\n};\r\nexport default MovieItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport queryString from \"query-string\";\r\n\r\nimport MovieItem from \"../../HomePage/components/MovieItem/MovieItem\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\n\r\nimport \"./SearchView.scss\";\r\n\r\nconst SearchView = (props) => {\r\n  const token = useSelector((state) => state.auth.token);\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [queryResult, setQueryResult] = useState([]);\r\n  const { search } = useLocation();\r\n  const { q } = queryString.parse(search);\r\n  useEffect(() => {\r\n    const fetchInitData = async () => {\r\n      const responseMovieData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/movies?search=${q}`,\r\n        \"GET\",\r\n        null,\r\n        { Authorization: `Bearer ${token}` }\r\n      );\r\n      // console.log(responseMovieData);\r\n      setQueryResult(responseMovieData);\r\n    };\r\n    fetchInitData();\r\n  }, [q, sendRequest, token]);\r\n  return (\r\n    <div className=\"searchResult-container\" movies={queryResult}>\r\n      <ul className=\"searchResult-list\">\r\n        {Object.keys(queryResult).length !== 0 &&\r\n          queryResult.movies.map((movie) => (\r\n            <MovieItem\r\n              className=\"large\"\r\n              key={movie.id}\r\n              movie={movie}\r\n              id={movie.id}\r\n              loading={isLoading}\r\n            />\r\n          ))}\r\n        {queryResult.message && (\r\n          <div className=\"searchResult-msg\">\r\n            Oops, no movie found. Please, search movies by the title!\r\n          </div>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchView;\r\n","import React from \"react\";\r\n\r\nimport { ANIMATION_STYLE, ANIMATION_TIMEOUT } from \"../../../util/util\";\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../Button/Button\";\r\n\r\nexport const MessagePopupModal = (props) => {\r\n  return (\r\n    <Modal\r\n      element=\"warning\"\r\n      onClose={props.onClose}\r\n      header=\"Message\"\r\n      headerClass=\"msg-header\"\r\n      contentClass={props.contentClass}\r\n      show={!!props.message}\r\n      footer={\r\n        <Button onClick={props.onClose} className=\"btn-popup btn--sucess\">\r\n          Okay\r\n        </Button>\r\n      }\r\n    >\r\n      <p>{props.message}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const MessageCornerModal = (props) => {\r\n  return (\r\n    <Modal\r\n      element=\"message\"\r\n      contentClass={props.contentClass}\r\n      show={!!props.show}\r\n      message={props.message}\r\n      aniClassNames={ANIMATION_STYLE.popup}\r\n      aniTiming={ANIMATION_TIMEOUT.popupAniTiming}\r\n    >\r\n      <p>{props.message}</p>\r\n    </Modal>\r\n  );\r\n};\r\n","import { useCallback, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { useHttpClient } from \"./http-hook\";\r\n\r\nimport { authAction } from \"../store/auth\";\r\n\r\nexport const useMovieBtn = (id = \"\") => {\r\n  const dispatch = useDispatch();\r\n  const token = useSelector((state) => state.auth.token);\r\n  const watchList = useSelector((state) => state.auth.watchlist);\r\n  const { sendRequest } = useHttpClient();\r\n  const [addMovieState, setAddMovieState] = useState(\r\n    watchList.some((movieId) => movieId === id)\r\n  );\r\n  const [message, setMessage] = useState({ msg: undefined, isShow: false });\r\n  const watchListToggleHandler = useCallback(async () => {\r\n    try {\r\n      if (!addMovieState) {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/watchlist/add`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            movie: id,\r\n          }),\r\n          {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        // console.log(responseData);\r\n        if (!responseData.movieIsExisted) {\r\n          dispatch(authAction.setWatchList(responseData.watchList));\r\n          console.log(\"Added movie to watch list\");\r\n        }\r\n        setAddMovieState(true);\r\n        setMessage({\r\n          msg: responseData.message || \"Added movie to watch list\",\r\n          isShow: true,\r\n        });\r\n      } else {\r\n        const responseData = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/watchlist/remove`,\r\n          \"PATCH\",\r\n          JSON.stringify({\r\n            movie: id,\r\n          }),\r\n          {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        // console.log(responseData);\r\n        if (!responseData.movieIsExisted) {\r\n          dispatch(authAction.setWatchList(responseData.watchList));\r\n          console.log(\"Removed movie from watch list\");\r\n        }\r\n        setAddMovieState(false);\r\n        setMessage({\r\n          msg: responseData.message || \"Removed movie from watch list\",\r\n          isShow: true,\r\n        });\r\n      }\r\n      clearMessage();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }, [addMovieState, dispatch, sendRequest, token, id]);\r\n  function clearMessage() {\r\n    const timer = setTimeout(() => {\r\n      setMessage((prevState) => {\r\n        return { ...prevState, isShow: false };\r\n      });\r\n    }, 3000);\r\n    return () => clearTimeout(timer);\r\n  }\r\n  return {\r\n    watchListToggleHandler,\r\n    addMovieState,\r\n    message,\r\n    clearMessage,\r\n  };\r\n};\r\n"],"names":["props","useState","isMuted","setIsMuted","useMovieBtn","id","watchListToggleHandler","addMovieState","message","clearMessage","Modal","className","show","onClose","aniClassNames","ANIMATION_STYLE","aniTiming","ANIMATION_TIMEOUT","src","movie","trailer","file","autoPlay","loop","muted","Button","element","to","pathname","PlayArrow","onClick","toolTip","title","placement","fontSize","Favorite","ThumbUpOffAlt","ThumbDownOffAlt","VolumeOff","VolumeUp","Close","matching","year","isSeries","duration","casting","genre","label","warning","desc","isShow","msg","token","useSelector","state","auth","isHovered","setIsHovered","useHttpClient","loading","isLoading","sendRequest","movieItem","setMovieItem","showDetail","setShowDetail","useEffect","fetchMovieItem","process","Authorization","responseData","onMouseLeave","LoadingSpinner","asOverlay","inherit","Fragment","image","alt","onMouseOver","_id","ExpandMore","limit","split","map","FiberManualRecord","trim","Math","random","MovieDetail","queryResult","setQueryResult","search","useLocation","q","queryString","fetchInitData","responseMovieData","movies","Object","keys","length","MovieItem","MessageCornerModal","contentClass","dispatch","useDispatch","watchList","watchlist","some","movieId","setAddMovieState","undefined","setMessage","useCallback","JSON","stringify","movieIsExisted","authAction","console","log","timer","setTimeout","prevState","clearTimeout"],"sourceRoot":""}