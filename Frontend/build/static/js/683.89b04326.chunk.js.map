{"version":3,"file":"static/js/683.89b04326.chunk.js","mappings":"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","sources":["HomePage/components/Footer/Footer.js","HomePage/pages/Registeration/Register.js"],"sourcesContent":["import React from \"react\";\r\n\r\nimport Button from \"../../../shared/components/UI/Button/Button\";\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-container\">\r\n      <footer className=\"footer\">\r\n        <div className=\"container\">\r\n          <div className=\"footer-links-top\">\r\n            <Button element=\"link\" to=\"/\">\r\n              Questions? Contact us.\r\n            </Button>\r\n          </div>\r\n          <ul className=\"footer-links\">\r\n            <div className=\"col-1\">\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  FAQ\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Investor Relations\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Privacy\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Speed Test\r\n                </Button>\r\n              </li>\r\n            </div>\r\n            <div className=\"col-2\">\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Help Center\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Jobs\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Cookie Preferences\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Legal Notices\r\n                </Button>\r\n              </li>\r\n            </div>\r\n            <div className=\"col-3\">\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Account\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Ways to Watch\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Corporate Information\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Only on Netflix\r\n                </Button>\r\n              </li>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Media Center\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Terms of Use\r\n                </Button>\r\n              </li>\r\n              <li className=\"footer-link-item\">\r\n                <Button element=\"link\" to=\"/\">\r\n                  Contact Us\r\n                </Button>\r\n              </li>\r\n            </div>\r\n          </ul>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { Fragment, useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { authAction } from \"../../../shared/store/auth\";\r\n\r\nimport { useHttpClient } from \"../../../shared/hooks/http-hook\";\r\nimport { useForm } from \"../../../shared/hooks/form-hooks\";\r\n\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Input from \"../../../shared/components/UI/Input/Input\";\r\nimport Button from \"../../../shared/components/UI/Button/Button\";\r\nimport ErrorModal from \"../../../shared/components/UI/Modal/ErrorModal\";\r\nimport LoadingSpinner from \"../../../shared/components/UI/Loading/LoadingSpinner\";\r\n\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MAXLENGTH,\r\n  VALIDATOR_MINLENGTH,\r\n} from \"../../../shared/util/validators\";\r\nimport {\r\n  EMAIL_MAXLENGTH,\r\n  EMAIL_MINLENGTH,\r\n  USERNAME_MINLENGTH,\r\n  USERNAME_MAXLENGTH,\r\n} from \"../../../shared/util/util\";\r\nimport \"./Register.scss\";\r\n\r\nconst Register = () => {\r\n  const dispatch = useDispatch();\r\n  const [signupState, setSignupState] = useState(false);\r\n  const [formState, inputHandler] = useForm(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      username: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const signupStateHandler = () => {\r\n    setSignupState(true);\r\n  };\r\n\r\n  const signupSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const responseData = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/users/auth/signup`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          email: formState.inputs.email.value,\r\n          username: formState.inputs.username.value,\r\n          password: formState.inputs.password.value,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      // console.log(responseData);\r\n      dispatch(\r\n        authAction.login({\r\n          token: responseData.token.token,\r\n          userId: responseData.user.id,\r\n        })\r\n      );\r\n    } catch (error) {}\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <div className=\"register\">\r\n        <div className=\"regisNav\">\r\n          <img\r\n            className=\"logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/2560px-Netflix_2015_logo.svg.png\"\r\n            alt=\"\"\r\n          />\r\n          <Button element=\"link\" className=\"btn btn--red btn-login\" to=\"/login\">\r\n            Sign In\r\n          </Button>\r\n        </div>\r\n        {!signupState && (\r\n          <div className=\"welcome-container\">\r\n            <h1>Unlimited movies, TV shows, and more</h1>\r\n            <h2>Watch anywhere. Cancel anytime.</h2>\r\n            <p>\r\n              Ready to watch? Enter your email to create or restart your\r\n              membership\r\n            </p>\r\n            <div className=\"input-signup-container\">\r\n              <Input\r\n                id=\"email\"\r\n                element=\"input\"\r\n                label=\"Email address\"\r\n                type=\"text\"\r\n                validators={[VALIDATOR_EMAIL()]}\r\n                errorText=\"Email is required!\"\r\n                errorStyle={{ color: \"#ffa00a\", fontSize: \"15px\" }}\r\n                onInput={inputHandler}\r\n              />\r\n\r\n              <Button\r\n                className=\"btn btn--red btn-register\"\r\n                onClick={signupStateHandler}\r\n                disabled={!formState.inputs.email.isValid}\r\n              >\r\n                Get Started\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {signupState && (\r\n          <form className=\"signup-form\" onSubmit={signupSubmitHandler}>\r\n            {isLoading && <LoadingSpinner asOverlay />}\r\n            <h1 className=\"heading\">\r\n              Welcome back! <span>Start your free membership</span>\r\n            </h1>\r\n            {error && !isLoading && (\r\n              <ErrorModal error={error} onClose={clearError} />\r\n            )}\r\n            <Input\r\n              id=\"email\"\r\n              element=\"input\"\r\n              label=\"Email\"\r\n              type=\"text\"\r\n              validators={[\r\n                VALIDATOR_EMAIL(),\r\n                VALIDATOR_MINLENGTH(EMAIL_MINLENGTH),\r\n                VALIDATOR_MAXLENGTH(EMAIL_MAXLENGTH),\r\n              ]}\r\n              errorText=\"include '@' (3-60 characters)\"\r\n              errorStyle={{ color: \"#ffa00a\", fontSize: \"15px\" }}\r\n              onInput={inputHandler}\r\n              initialValue={formState.inputs.email.value}\r\n              initialValid={formState.inputs.email.isValid}\r\n            />\r\n            <Input\r\n              id=\"username\"\r\n              element=\"input\"\r\n              label=\"Username\"\r\n              type=\"text\"\r\n              validators={[\r\n                VALIDATOR_MINLENGTH(USERNAME_MINLENGTH),\r\n                VALIDATOR_MAXLENGTH(USERNAME_MAXLENGTH),\r\n              ]}\r\n              errorText=\"6-36 character(s)\"\r\n              errorStyle={{ color: \"#ffa00a\", fontSize: \"15px\" }}\r\n              onInput={inputHandler}\r\n            />\r\n            <Input\r\n              id=\"password\"\r\n              element=\"input\"\r\n              label=\"Add a password\"\r\n              type=\"password\"\r\n              validators={[VALIDATOR_MINLENGTH(8)]}\r\n              errorText=\"at least 8 characters with (1, A, $, @,...)\"\r\n              errorStyle={{ color: \"#ffa00a\", fontSize: \"15px\" }}\r\n              value={formState.inputs.password.value}\r\n              onInput={inputHandler}\r\n            />\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"btn btn--red btn-signup\"\r\n              disabled={!formState.isValid}\r\n            >\r\n              Sign Up\r\n            </Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n      <div className=\"story-container\">\r\n        <Footer />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"names":["className","Button","element","to","dispatch","useDispatch","useState","signupState","setSignupState","useForm","email","value","isValid","username","password","formState","inputHandler","useHttpClient","isLoading","error","sendRequest","clearError","signupSubmitHandler","event","preventDefault","process","JSON","stringify","inputs","responseData","authAction","token","userId","user","id","Fragment","src","alt","Input","label","type","validators","VALIDATOR_EMAIL","errorText","errorStyle","color","fontSize","onInput","onClick","disabled","onSubmit","LoadingSpinner","asOverlay","ErrorModal","onClose","VALIDATOR_MINLENGTH","EMAIL_MINLENGTH","VALIDATOR_MAXLENGTH","EMAIL_MAXLENGTH","initialValue","initialValid","USERNAME_MINLENGTH","USERNAME_MAXLENGTH","Footer"],"sourceRoot":""}